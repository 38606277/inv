<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="auth">
    <cache/>
    <select id="getSelectClassByUserName" resultType="Map" parameterType="Map">
        SELECT a.auth_id as authId,a.auth_type as authType,a.func_id as funcId,a.user_id as userId,u.USER_NAME as userName,f.func_name as funcName,f.func_type as funcType,f.func_pid as funcPid
        from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        LEFT JOIN fnd_func f on a.func_id = f.func_id
        where u.USER_NAME = #{userName} and f.func_type =#{type} and f.func_pid =#{pid}
    </select>
    <select id="getAuthByConditions" resultType="Map" parameterType="Map">
        SELECT a.auth_id as authId,a.auth_type as authType,a.func_id as funcId,a.role_id as roleId,u.role_NAME as roleName,f.func_name as funcName,f.func_type as funcType
		from fnd_auth a LEFT JOIN fnd_role u on a.role_id = u.role_ID
		LEFT JOIN fnd_func f on a.func_id = f.func_id
		where u.role_id = #{roleId} and a.auth_type =#{type}
    </select>
    <select id="getAuthByConditionsTable" resultType="Map" parameterType="Map">
        SELECT a.auth_id as authId,a.auth_type as authType, CONCAT_WS('/','${type}',a.func_id) as funcId,a.role_id as roleId,u.role_NAME as roleName,f.func_name as funcName,f.func_type as funcType
        from fnd_auth a LEFT JOIN fnd_role u on a.role_id = u.role_ID
        LEFT JOIN fnd_func f on a.func_id = f.func_id
        where u.role_id = #{roleId} and a.auth_type =#{type}
    </select>
    <select id="getAuthListByConditions" resultType="Map" parameterType="Map">
        SELECT a.auth_id as authId,a.auth_type as authType,a.func_id as funcId,a.role_id as roleId,u.role_NAME as roleName
		from fnd_auth a LEFT JOIN fnd_role u on a.role_id = u.role_ID
		where u.role_id = #{roleId} and a.auth_type =#{type}
    </select>
    <select id="getSelectAuthList" resultType="Map" parameterType="Map">
        select a.func_id as name from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        where u.USER_NAME = #{userName} and locate('/',a.func_id)=0 and a.auth_type = 'select'
    </select>
    <select id="getSelectAuthListByClass" resultType="Map" parameterType="Map">
        select a.func_id as name from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        where u.USER_NAME = #{userName} and locate('${className}/',a.func_id)>0 and a.auth_type = 'select'
    </select>
    <select id="getTemplateAuthList" resultType="Map" parameterType="Map">
        select a.func_id as name from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        where u.USER_NAME = #{userName} and a.auth_type = 'template' ORDER BY a.func_id
    </select>
    <select id="getAuthByFuncType" resultType="Map" parameterType="Map">
        SELECT a.auth_id as authId,a.auth_type as authType,a.func_id as funcId,a.role_id as roleId,u.role_NAME as roleName,f.func_name as funcName,f.func_type as funcType,f.func_pid as funcPid
        from fnd_auth a LEFT JOIN fnd_role u on a.role_id = u.role_id
        LEFT JOIN fnd_func f on a.func_id = f.func_id
        where u.role_id = #{roleId} and f.func_type =#{type}
    </select>
    <select id="getFuncRuleList" resultType="Map" parameterType="Map">
        SELECT a.auth_id as authId,a.auth_type as authType,a.func_id as funcId,a.user_id as userId,u.USER_NAME as userName,f.func_name as funcName,f.func_type as funcType,f.func_pid as funcPid
        from fnd_auth a LEFT JOIN fnd_role u on a.role_id = u.role_id
        LEFT JOIN fnd_func f on a.func_id = f.func_id
        where  u.role_id = #{roleId} and f.func_type =#{type} and f.func_pid =#{pid}
    </select>
    <select id="getFunctionAuthList" resultType="Map" parameterType="Map">
        select a.func_id as name from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        where u.USER_NAME = #{userName} and locate('/',a.func_id)=0 and a.auth_type = 'function'
    </select>
    <select id="getFunctionAuthListByClass" resultType="Map" parameterType="Map">
        select a.func_id as name from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        where u.USER_NAME = #{userName} and locate('${className}/',a.func_id)>0 and a.auth_type = 'function'
    </select>
    <select id="getExcelRuleList" resultType="Map" parameterType="Map">
        select f.func_name as funcName,f.func_id as funcId from fnd_func f where f.func_type = #{type} and f.func_pid = #{pid}
    </select>
    <select id="getDataAuthList" resultType="Map" parameterType="Map">
        select a.func_id as name from fnd_auth a LEFT JOIN fnd_user u on a.user_id = u.USER_ID 
        where u.USER_NAME = #{userName} and a.auth_type = 'data' ORDER BY a.func_id
    </select>
    <select id="getDepartmentList" resultType="Map" parameterType="Map">
        select o.ORG_EXT_ID as value,o.ORG_NAME as name,o.PARENT_ORG_EXT_ID as parentId from arch_org_ext o
        where o.PARENT_ORG_EXT_ID=#{parentId};
    </select>
    <select id="getDepartmentListByCid" resultType="Map" parameterType="Map">
        select e.ORG_EXT_ID as value,e.ORG_NAME as name from arch_org_ext e,tbm_companies c 
		where e.COMPANY_ID=c.COMPANY_ID
		and c.COMPANY_CODE = #{companyCode}
    </select>
    <insert id="addRules" parameterType="Map" useGeneratedKeys="true" keyProperty="auth_id">
        insert into fnd_auth(auth_type, func_id, user_id) values(#{type}, (select func_id from fnd_func where func_name = #{funcName}), (select USER_ID from fnd_user where USER_NAME = #{userName}))
    </insert>
    <insert id="addAuthRules" parameterType="Map" useGeneratedKeys="true" keyProperty="auth_id">
        insert into fnd_auth(auth_type, func_id, role_id) values(#{type}, #{funcName},  #{roleId})
    </insert>
    <delete id="deleteRules" parameterType="Map">  
        delete from fnd_auth 
		where role_id =  #{roleId}
		and auth_type = #{type}
    </delete>
    <!--获取菜单列表-->
    <select id="getMenuByUserId" resultType="Map" parameterType="Map">
        select * from fnd_func f inner join (SELECT DISTINCT a.func_id from fnd_auth a
        inner join (select u.role_id from fnd_user_role u where u.user_id=#{userId,jdbcType=INTEGER}) as b on a.role_id=b.role_id
        where a.auth_type='webFunc')as r on f.func_id=r.func_id where f.func_type='reactWeb' and f.func_pid=#{pid,jdbcType=INTEGER} order by f.order,f.func_id asc
    </select>
    <select id="getMenuAll" resultType="Map" parameterType="Map">
         select f.* from fnd_func f inner join (SELECT DISTINCT a.func_id from fnd_auth a
        where a.auth_type='webFunc')as r on f.func_id=r.func_id where f.func_type='reactWeb' and f.func_pid=#{pid,jdbcType=INTEGER} order by f.order,f.func_id asc
    </select>
    <select id="getCubeListInAuth" resultType="Map" parameterType="map">
        select DISTINCT f.cube_id, f.cube_name,f.qry_id,qn.class_id,a.auth_type from fnd_auth a
        INNER JOIN da_cube f on a.func_id=f.cube_id and a.auth_type='cube'
        INNER  JOIN qry_name qn on f.qry_id=qn.qry_id
        <if  test="user_id != null and user_id!=1">
            INNER join (select r.role_id from fnd_user_role r where r.user_id=#{user_id,jdbcType=INTEGER}) as role
            on a.role_id=role.role_id
        </if>
    </select>
    <select id="getDashboardListInAuth" resultType="Map" parameterType="map">
        select DISTINCT f.dashboard_id, f.dashboard_name,f.class_id,a.auth_type from fnd_auth a
        INNER JOIN dashboard f on a.func_id=f.dashboard_id and a.auth_type='dashboard'
        <if  test="user_id != null and user_id!=1">
            INNER join (select r.role_id from fnd_user_role r where r.user_id=#{user_id,jdbcType=INTEGER}) as role
            on a.role_id=role.role_id
        </if>
    </select>
</mapper>
